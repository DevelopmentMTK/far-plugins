#summary Far Macro Library
#labels Macros

= Описание =

 Плагин предназначен для управления макросами FAR, хранимыми в текстовом формате.

 Плагин использует собственный формат файла - [FML FML (Far Macro Library)]. В одном FML файле может быть записано произвольное количество макросов. При запуске плагин ищет все FML файлы в заданном каталоге (по умолчанию - подкаталог Macros в каталоге плагина). Если макросу назначена горячая клавиша, то он будет вызван автоматически при ее нажатии. Макросы, которым не назначена горячая клавиша, можно вызывать через меню плагина. Если на одну горячую клавишу назначено несколько макросов, то при ее нажатии будет предложено выбрать один из них.

  Обсуждение:<br>
  http://forum.farmanager.com/viewtopic.php?f=5&t=5994

  Репозиторий FML макросов:<br>
  http://code.google.com/p/far-macro-library/

== Загрузить ==

 * [http://plugring.farmanager.com/plugin.php?pid=844 Последняя версия]

 * [http://code.google.com/p/far-plugins/downloads/list?q=MacroLib&can=1 Старые версии]


== Пример ==

http://far-plugins.googlecode.com/svn/trunk/MacroLib/Image/Sample.png

----

= История изменений =

== Ver 1.23 ==

 * Исправление ошибок

== Ver 1.22 ==

 * Возможно обновление LUA макросов из модального редактора, вызванного из списка макросов (макрос на F9).

 * Команда перехода из списка макросов к макрофайлу (Ctrl+PgDn)

 * Настройка цветов

 * Исправление ошибок


== Ver 1.21 ==

 * Список макросов отображает FML макросы и нативные LUA макросы/события (если вызов списка производится через специальный макрос-хелпер)

 * В списке макросов часть макросов может быть скрыта. Скрытыми считаются макросы не имеющие описания, или если их описание начинается с точки. Показать скрытые макросы - Ctrl-H.

 * В списке макросов добавлены заголовки столбцов. Клик на заголовке - упорядочивает по столбцу.

 * Расширенные команды Plugin.Call. Подробности - в readme.txt.

 * При установленном плагине FarHints ошибка компиляции макросов может показываться в неблокирующем режиме (см. макрос "Update macroses")

 * Запуск новых макросов не блокируется во время исполнения предыдущего макроса (но блокируется во время записи).


== Ver 1.20 ==

 * Добавлена возможность вложения макросов друг в друга, с помощью директив: `#include_macro` и `#include_macro_once`
 Допустимо только однократное вложение.

 * Исправление ошибок

== Ver 1.19 ==

  * Far3 build 2851+ (LUA)
  * Расширение макрофайлов теперь - fmlua
  * Добавлены однострочные комментарии в стиле LUA (начинающиеся с "--") Внутри макропоследовательности комментарии специально не разбираются, поэтому можно использовать _только_ комментарии LUA.


  
== Ver 1.0.17 ==
  
  * Поддержка регулярных выражений в привязке клавиш (только для Far3). Теперь вместо:
{{{
Keys="Alt1 Alt2 Alt3 Alt4 Alt5 Alt6 Alt7 Alt8 Alt9 Alt0"
}}}
  можно писать:
{{{
Keys="/Alt\d/"
}}}
  Замечания:
    # Регулярные выражения допустимы только в макросах, описанных с помощью ключевого слова Macro
    # Регулярное выражение отличается от обычного имени клавиши тем, что оно окружается символом "/" (слэш), если вам надо повесить макрос на данную клавишу, используйте привязку вида: Key="/\//"
    # Регулярное выражение регистро-нечувствительное, добавлять "i" не надо.
    # Привязка по регулярным выражениям поддерживает модификаторы нажатий, они должны записываться после закрывающего слэша:
{{{
Keys="/Alt\d/:Up"
}}}
    # В одной строке можно указывать несколько привязок по регулярным выражениям и без, в произвольном порядке:
{{{
Keys="/Alt\d/ Alt- Alt="
}}}

  * Условие срабатывания Selected работает и в диалогах


== Ver 1.0.15 ==

  * Far 3.0.2380+ (охтыжёбтвоюмать)

== Ver 1.0.14 ==

  * Поддержка новых версий Far3 (Far 3.0.2379+ )

  * Far 3: Новые макрообласти "DlgACompl" и "ShellACompl". Если указано просто "ACompl", то макрос работает в обоих областях, как и раньше.

  * Far 3: В связи с тем что ProcessConsoleInput пока не доделан, в плагин добавлена возможность обработки клавиатуры через injection, как в Far 2. Для включения этого режима включите опцию "Use Injection" в настройках плагина и перезагрузите FAR.

== Ver 1.0.10 - 1.0.13 ==

  * Поддержка Far 3

  * Поддержка нативного режима запуска макросов.

  "Нативные" макросы должны начинаться с ключевого слова FarMacro - тогда MacroLib не будет их запускать самостоятельно, а добавит в списки Far (через MCTL_ADDMACRO), а Far уже запустит сам - как умеет.

  Нативные макросы обладают рядом ограничений, по сравнению с MacroLib-овскими:
    # Не работают модификаторы нажатий
    # Не работает запуск по событиям
    # Не работают приоритеты (пока нативные макросы обладают наивысшим приоритетом)
    # Не выдается список в случае конфликта (просто сработает первый)
    # Не работает макроподстановка #AKey - используйте функцию AKey()

  Привязка к нескольким кнопкам и областям (в том числе по GUID'ам или заголовкам) - работает.

  Плюсы:
    # Теоретически, такие макросы должны запускаться немного быстрее.
    # Их можно вызывать через Eval

== Ver 1.0.9 ==

  * Новые модификаторы нажатий - Down и Up:

    Down - Макрос срабатывает только при нажатии (без автоповтора)

    Up   - Макрос срабатывает при отпускании. В отличии от Release     макрос срабатывает при отпускании префиксных клавиш, даже если были комбинированные нажатия


== Ver 1.0.8 ==

  * Требуется FAR Build 1800+

  * В макросах работают стандартные функции AKey()/$AKey. Макроподстановка #AKey оставлена, для совместимости.

  * Поддержка командных префиксов. Префикс по умолчанию "FML", настраивается в реестре (ключ CmdPrefix). Пока поддерживаются только команды Call и Key. Подробности - Readme.txt

  * Поддержка исполнения команд через CallPlugin. Синтаксис командной строки точно такой же, как через префикс (только не надо писать "FML:")
  Пример:

  CallPlugin(MacroLib, "call Hello")

  Примечание: Хотя вызов макроса из макроса через CallPlugin похож на вызов макрофункций через Eval, он обладает существенно отличным поведением в связи с особенностями реализации: исполнение текущего макроса прекращается и начинает исполняться вызванный макрос, эту особенность необходимо учитывать при использовании данной функции.

  * Исправлено несколько ошибок.


== Ver 1.0.7 ==

  * Приоритет макроса. Если под условия срабатывания попало сразу несколько макросов, то будет исполнен макрос, обладающий наибольшим приоритетом. Если имеется несколько макросов с одинаковым приоритетом, то будет показан диалог со списком макросов и предложено выбрать один из них.

  * Правила срабатывания макросов, назначенных на буквенные клавиши приведены в соответствие со стандартом в FAR: макрос назначенный на "Z" срабатывает при нажатии на "z", "ShiftZ", "я" и "ShiftЯ", при этом макроподстановка #AKey вернет код символа: "z", "Z", "я", "Я" соответственно.

  * Возможность привязки макросов в области Editor/Viewer к определенному типу файлов, по маске. Подробности в Readme.txt.

  * В списке макросов, в колонке с кнопками отображаются модификаторы нажатий.

  * Исправлено несколько ошибок


== Ver 1.0.6 ==

  * Возможность привязки макросов к конкретному диалогу по Caption. Полезно, пока не все диалоги снабжены GUID'ами.

  * Возможность привязки макросов к одинарному/двойному нажатию клавиши или кнопки мыши, или удержании кнопки в течении тайм-аута. В сумме это дает возможность назначить на одну кнопку до 4-х макросов  :)
  Подробности - Readme.txt

  * Обработка клавиатуры и мыши автоматически отключается на время записи и проигрывания макросов.


== Ver 1.0.5 ==

   * Альтернативный способ запуска макросов - по событию. В текущей версии поддерживается только один тип события "Open". Если это событие назначено для области Shell, то макрос исполняется один раз при запуске FAR. Если событие назначено для областей Editor, Viewer или Dialog то макрос исполняется каждый раз при открытии соответствующего окна. Для других областей событие игнорируется.

  * Новые команды в списке макросов:<br>
      * Alt-F4 - Открывает макрос в модальном текстовом редакторе
      * F5     - Обновляет макросы (работает только в полном списке макросов)

  * В списке макросов показываются подсказки (требуется плагин FarHints)

== Ver 1.0.4 ==

  * В списке макросов возможна фильтрация и упорядочиванию по любому столбцу, Ctrl-2/3/4 циклически переключают режимы отображения столбцов.<br>
 Подробности в хелпе (F1)

  * Для задания некоторых макрообластей используются сокращенный наименования (длинные имена оставлены в качестве синонимов)

  * Исправлен ряд ошибок

== Ver 1.0.3 ==
  
 * Описания констант в FML файле. Константы можно использовать при указании макрообластей и в тексте макропоследовательности.

 * Include в FML файлах. Можно подключать файлы с описанием констант, например. Также поддерживается #Include в тексте макропоследовательности, таким образом можно включать "plain-text" макросы или макросы от плагина SelMacro.

 * Макроподстановка #AKey, для замены неработающих $AKey и AKey() см. пример - AltScreens.fml

 * Возможно назначение макросов на однократное нажатие префиксных клавиш Ctrl/Alt/Shift. Обратите внимание: чтобы поведение таких макросов было аналогично стандартному поведению в FAR (макрос срабатывает при _отпускании_ префиксной клавиши) необходимо явно указать параметр: RunOnRelease=1

 * Изменено поведение при обработке правых и левых префиксных клавиш:
   # Если макрос назначен на CtrlX то он сработает при нажатии на CtrlX и при нажатии на RCtrlX
   # Если макрос назначен на RCtrlX то он сработает только при нажатии RCtrlX
   # Если два макроса назначены на CtrlX и RCtrlX, то они будут срабатывать только при нажатии соответствующей им клавиши.

 Назначение разных макросов на правые и левые префиксные клавиши дает возможность назначить в два раза больше макросов :)

== Ver 1.0.2 ==

 * Поддержаны все условия срабатывания макросов. Задаются с помощью параметра Condition. Подробности в Readme.txt

 * Возможность привязки макросов к конкретному диалогу по GUID.
    
 Для демонстрации этой возможности в комплекте идет:<br>
 макрос возвращающий поиску прежнее поведение (c) John Doe<br>
 http://forum.farmanager.com/viewtopic.php?f=15&t=3392

  * Исправленная схема для colorer'а